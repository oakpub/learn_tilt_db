{{- if .Values.microservice1.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: microservice1-web
  namespace: {{ .Values.global.namespace }}
  labels:
    {{- include "k8s-helm-tilt-service.labels" . | nindent 4 }}
    app.kubernetes.io/component: microservice1-web
spec:
  replicas: {{ .Values.microservice1.webApp.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/name: microservice1-web
      app.kubernetes.io/instance: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: microservice1-web
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: microservice1-web
    spec:
      containers:
      - name: microservice1
        image: "{{ .Values.microservice1.webApp.image.repository }}:{{ .Values.microservice1.webApp.image.tag }}"
        imagePullPolicy: {{ .Values.microservice1.webApp.image.pullPolicy }}
        ports:
        - name: http
          containerPort: {{ .Values.microservice1.webApp.service.targetPort }}
          protocol: TCP
        env:
        - name: DB_HOST
          value: "postgres-service1"
        - name: DB_PORT
          value: "{{ .Values.microservice1.postgres.service.port }}"
        - name: DB_NAME
          valueFrom:
            configMapKeyRef:
              name: microservice1-config
              key: database-name
        - name: DB_USER
          valueFrom:
            configMapKeyRef:
              name: microservice1-config
              key: database-user
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: microservice1-secret
              key: database-password
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          {{- toYaml .Values.microservice1.webApp.resources | nindent 10 }}
      restartPolicy: Always
{{- end }}